<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Events</title>
    <style>
        .hidden {
            display: none;
        }

        a {
            color: aqua;
        }
        body {
            font-family: Arial, sans-serif;
            background-color: #f0f2f5;
        }

        .container {
            max-width: 450px;
            margin: 50px auto;
            padding: 30px 50px;
            border: 2px solid rgba(255, 255, 255, 0.18);
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0));
            border-radius: 30px;
            backdrop-filter: blur(10px);
            background-position: relative;
            box-shadow: 0 8px 32px 0 rgba(0, 0, 0, 0.37);
            background-image: linear-gradient(to top, #cfd9df 0%, #e2ebf0 100%);
        }

        .container h1 {
            text-align: center;
            margin-bottom: 50px;
        }

        .container button {
            width: 100%;
            padding: 10px;
            background-color: #0066cc;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 3px;
        }

        .container button:hover {
            background-color: #003399;
        }

        button[type="submit"] {
            width: 100%;
            margin-top: 20px;
            padding: 10px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        button[type="submit"]:hover {
            background-color: #0056b3;
        }

        .container input[type="text"],
        .container input[type="datetime-local"],
        .container input[type="number"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #ddd;
            border-radius: 3px;
        }

        .container .error {
            color: red;
            margin-bottom: 10px;
        }

        label {
            font-weight: bold;
        }

        .dropdown1 {
            width: 100%;
        }

        .dropdown-menu {
            display: flex;
            flex-direction: row;
            gap: 50px;
            margin-top: 10px;
        }

        .message {
            text-align: center;
            margin-top: 20px;
            padding: 10px;
            border-radius: 5px;
        }

        .message.success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .message.error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Add Interview Schedules</h1>
        <form id="reg" enctype="multipart/form-data" action="/placement/add_events" method="POST">
            <div>
                <label for="title">Title:</label>
                <input type="text" id="title" name="title" required>
            </div>
            <div>
                <label for="start">Start:</label>
                <div id="startDatetimepicker">
                    <input type="datetime-local" id="start" name="start" required>
                </div>
            </div>
            <br>
            <div>
                <label for="end">End:</label>
                <div id="endDatetimepicker">
                    <input type="datetime-local" id="end" name="end" required>
                </div>
            </div>
            <br>

            <!-- Round Selection -->
            <div>
                <legend>Round:</legend>
                <label><input type="radio" name="round" value="1" onclick="toggleFields()" required>Initial Round</label>
                <label><input type="radio" name="round" value="2" onclick="toggleFields()" required>Further Round</label>
            </div>
            <br>

            <!-- Fields for Round 1 -->
            <div id="round1Fields" class="hidden">
                <div>
                    <label for="CGPA">CGPA: </label>
                    <input type="number" id="CGPA" name="CGPA" step="0.01">
                </div>
                <br>
                <div>
                    <legend>Gender:</legend>
                    <label><input type="radio" name="Gender" value="M"> M</label>
                    <label><input type="radio" name="Gender" value="F"> F</label>
                    <label><input type="radio" name="Gender" value="All"> Both</label>
                </div>
                <br>
                <div>
                    <legend>Branch:</legend>
                    <label><input type="checkbox" id="selectAllBranches" name="branch" value="ALL"> ALL</label><br>
                    <label><input type="checkbox" name="branch" value="IT"> IT</label><br>
                    <label><input type="checkbox" name="branch" value="CSE"> CSE</label><br>
                    <label><input type="checkbox" name="branch" value="CSE-AIML"> CSE-AIML</label><br>
                    <label><input type="checkbox" name="branch" value="ECE"> ECE</label><br>
                    <label><input type="checkbox" name="branch" value="EEE"> EEE</label><br>
                    <label><input type="checkbox" name="branch" value="MECH"> MECH</label><br>
                    <label><input type="checkbox" name="branch" value="CIVIL"> CIVIL</label><br>
                </div>
                <br>
            </div>

            <!-- Fields for Round 2 -->
            <div id="round2Fields" class="hidden">
                <div>
                    <label for="csvFile">Upload CSV:</label>
                    <input type="file" id="csvFile" name="csvFile" accept=".csv">
                </div>
            </div>
            <br>

            <div>
                <label for="href">HREF:</label>
                <input type="text" id="href" name="href" required>
            </div>
            <br>

            <button type="submit">Register</button>
        </form>
        <div id="message" class="message hidden"></div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>
    <script>
        $(function () {
            $('#startDatetimepicker, #endDatetimepicker').datetimepicker({
                format: 'YYYY-MM-DDTHH:mm:ss',
                ignoreReadonly: true
            });
        });

        document.getElementById('reg').addEventListener('submit', async function(event) {
            event.preventDefault();

            const form = event.target;
            const formData = new FormData(form);

            const round = document.querySelector('input[name="round"]:checked').value;

            if (round === '1') {
                handleRound1(formData);
            } else if (round === '2') {
                await handleRound2(formData);
            }

            submitForm(formData);
        });

        function handleRound1(formData) {
            const branches = Array.from(document.querySelectorAll('input[name="branch"]:checked')).map(checkbox => checkbox.value);
            formData.append('branches', JSON.stringify(branches));
            formData.append('Roll_numbers', JSON.stringify(['All']));
            formData.delete('csvFile'); // Ensure CSV file is not included
            console.log('Round 1 branches:', JSON.stringify(branches)); // Debugging line
        }

        async function handleRound2(formData) {
            const csvFile = document.getElementById('csvFile').files[0];
            if (csvFile) {
                const csvData = await readFile(csvFile);
                const rollNumbers = extractRollNumbers(csvData);
                formData.append('Roll_numbers', JSON.stringify(rollNumbers));
                // Remove initial round data if any
                formData.delete('CGPA');
                formData.delete('Gender');
                formData.delete('branch');
                console.log('Round 2 roll numbers:', JSON.stringify(rollNumbers)); // Debugging line
            } else {
                showMessage('Please upload a CSV file for Further Round.', 'error');
                throw new Error('CSV file missing for Further Round');
            }
        }

        function submitForm(formData) {
            fetch('/placement/add_events', {
                method: 'POST',
                body: formData,
            })
            .then(response => {
                if (response.ok) {
                    showMessage('Event Saved Successfully', 'success');
                    setTimeout(() => {
                    window.location.reload();
                }, 2000);
                } else {
                    return response.text().then(text => { throw new Error(text); });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showMessage('Failed to register event: ' + error.message, 'error');
            });
        }

        async function readFile(file) {
            return new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.onload = (event) => resolve(event.target.result);
                reader.onerror = (error) => reject(error);
                reader.readAsText(file);
            });
        }

        function extractRollNumbers(csvData) {
            const rows = csvData.split('\n');
            const rollNumbers = [];
            rows.forEach((row, index) => {
                if (index > 0) { // Skip header row
                    const columns = row.split(',');
                    if (columns.length > 0) {
                        rollNumbers.push(columns[0].trim());
                    }
                }
            });
            return rollNumbers;
        }

        document.getElementById('selectAllBranches').addEventListener('change', function(event) {
            const checkboxes = document.querySelectorAll('input[name="branch"]');
            checkboxes.forEach(checkbox => {
                if (checkbox !== event.target) {
                    checkbox.checked = event.target.checked;
                }
            });
        });

        function toggleFields() {
            const round1Fields = document.getElementById('round1Fields');
            const round2Fields = document.getElementById('round2Fields');
            const round = document.querySelector('input[name="round"]:checked').value;
            if (round === '1') {
                round1Fields.classList.remove('hidden');
                round2Fields.classList.add('hidden');
            } else {
                round1Fields.classList.add('hidden');
                round2Fields.classList.remove('hidden');
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            const roundRadios = document.querySelectorAll('input[name="round"]');
            roundRadios.forEach(radio => {
                radio.addEventListener('change', toggleFields);
            });

            if (document.querySelector('input[name="round"]:checked')) {
                toggleFields();
            }
        });

        function showMessage(message, type) {
            const messageDiv = document.getElementById('message');
            messageDiv.textContent = message;
            messageDiv.className = `message ${type}`;
            messageDiv.classList.remove('hidden');
        }
    </script>
</body>
</html>
